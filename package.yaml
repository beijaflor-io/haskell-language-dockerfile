name: language-dockerfile
version: '0.3.4.0'
synopsis: Dockerfile linter, parser, pretty-printer and embedded DSL
description: '
Forked from @hadolint@.


All functions for parsing, printing and writting Dockerfiles are exported
through @Language.Dockerfile@. For more fine-grained operations look for
specific modules that implement a certain functionality.


There are two flags in this package, which enable building two executables:


- @hadolint@ Enables building the @hadolint@ executable, though you might prefer
  to use the hadolint package directly

- @dockerfmt@ Builds example pretty-printer usage, which reads a Dockerfile and
  pretty-prints it to stdout


See the <https://github.com/beijaflor-io/haskell-language-dockerfile GitHub project> for the source-code and examples.
'
category: Development
author:
- Lukas Martinelli
- Pedro Tacla Yamada
maintainer: tacla.yamada@gmail.com
copyright:
- Lukas Martinelli, Copyright (c) 2016
- Pedro Tacla Yamada, Copyright (c) 2016
license: GPL-3
github: beijaflor-io/language-dockerfile
extra-source-files:
- README.md

dependencies:
- ShellCheck
- base >=4.8 && <5
- bytestring >=0.10
- parsec >=3.1
- pretty
- split >=0.2
- free
- mtl
- transformers
- template-haskell
- th-lift
- th-lift-instances

- text
- yaml
- aeson
- Glob
- unordered-containers
- directory
- filepath

flags:
  hadolint:
    description: Build the hadolint executable
    default: false
    manual: true
  dockerfmt:
    description: Build the dockerfmt executable
    default: false
    manual: true

library:
  source-dirs: src
  exposed-modules:
  - Language.Dockerfile
  - Language.Dockerfile.Parser
  - Language.Dockerfile.Predef
  - Language.Dockerfile.PrettyPrint
  - Language.Dockerfile.Normalize
  - Language.Dockerfile.Rules
  - Language.Dockerfile.Syntax
  - Language.Dockerfile.Lexer
  - Language.Dockerfile.Bash
  - Language.Dockerfile.FormatCheck
  - Language.Dockerfile.Syntax.Lift
  - Language.Dockerfile.EDSL
  - Language.Dockerfile.EDSL.Quasi
  - Language.Dockerfile.EDSL.Types

executables:
  hadolint:
    main: HadoLint.hs
    source-dirs: bin
    dependencies:
    - language-dockerfile
    buildable: false
    when:
      condition: 'flag(hadolint)'
      buildable: true

  dockerfmt:
    main: DockerFmt.hs
    source-dirs: bin
    dependencies:
    - language-dockerfile
    buildable: false
    when:
      condition: 'flag(dockerfmt)'
      buildable: true

tests:
  hspec:
    main: Spec.hs
    source-dirs: test
    dependencies:
    - hspec
    - QuickCheck
    - language-dockerfile
    - Glob
    - directory
    - filepath
    - process

  hadolint-unit-tests:
    main: Test.hs
    source-dirs:
    - src
    - test
    dependencies:
    - HUnit >=1.2
    - test-framework
    - test-framework-hunit
